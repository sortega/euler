package page1.p2

import util.Fibonacci

/** Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  * By starting with 1 and 2, the first 10 terms will be:
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  * find the sum of the even-valued terms.
  */
object Problem2 extends App {

  /** Every third Fibonacci number is even.
    *
    * Instead of filtering the whole sequence we can use a related sequence seeded by 0 and 2
    * with a different recurrence.
    */
  val evenFibonacci = Fibonacci.custom(seed = (0, 2), (a, b) => a + 4 * b)

  println(evenFibonacci.takeWhile(_ < 4000000).sum)
}
